2024/01/30 21:28:32 - mmengine - INFO - Config:
crop_size = (
    224,
    224,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size_divisor=32,
    std=[
        58.395,
        57.12,
        57.375,
        58.395,
        57.12,
        57.375,
    ],
    test_cfg=dict(size_divisor=32),
    type='DualInputSegDataPreProcessor')
data_root = '/work/share/achk2o1zg1/diwang22/dataset/OSCD/oscd_rgb_patch_dataset'
dataset_type = 'OSCD_RGB_CD_Dataset'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=True, interval=10, save_best='mIoU', type='CheckpointHook'),
    logger=dict(interval=10, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, interval=1, type='CDVisualizationHook'))
default_scope = 'opencd'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
find_unused_parameters = True
launcher = 'slurm'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        attn_drop_rate=0.0,
        depth=24,
        drop_path_rate=0.3,
        drop_rate=0.0,
        embed_dim=1024,
        frozen_stages=24,
        img_size=224,
        interval=6,
        mlp_ratio=4,
        num_heads=16,
        out_indices=[
            7,
            11,
            15,
            23,
        ],
        patch_size=16,
        pretrained=
        '/work/share/achk2o1zg1/diwang22/work_dir/mae_pretrain/vit_large_norm_pix/vit-l-mae-checkpoint-1599.pth',
        qk_scale=None,
        qkv_bias=True,
        type='RVSA_MTP',
        use_abs_pos_emb=True,
        use_checkpoint=False),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
            58.395,
            57.12,
            57.375,
        ],
        test_cfg=dict(size_divisor=32),
        type='DualInputSegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        attention_type=None,
        center=False,
        channels=64,
        decoder_channels=[
            512,
            256,
            128,
            64,
        ],
        dropout_ratio=0.1,
        encoder_channels=[
            1024,
            1024,
            1024,
            1024,
        ],
        ignore_index=255,
        in_channels=[
            1024,
            1024,
            1024,
            1024,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='mmseg.CrossEntropyLoss', use_sigmoid=False),
        n_blocks=4,
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=2,
        type='UNetHead',
        use_batchnorm=True),
    neck=dict(
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        policy='abs_diff',
        type='FeatureFusionNeck'),
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='SiamEncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    constructor='LayerDecayOptimizerConstructor_ViT',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=6e-05, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(layer_decay_rate=0.9, num_layers=24))
param_scheduler = [
    dict(
        begin=0,
        by_epoch=True,
        convert_to_iter_based=True,
        end=5,
        start_factor=1e-06,
        type='LinearLR'),
    dict(T_max=95, begin=5, by_epoch=True, end=100, type='CosineAnnealingLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path_from='test/A',
            img_path_to='test/B',
            seg_map_path='test/label'),
        data_root=
        '/work/share/achk2o1zg1/diwang22/dataset/OSCD/oscd_rgb_patch_dataset',
        pipeline=[
            dict(type='MultiImgLoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='MultiImgResize'),
            dict(type='MultiImgLoadAnnotations'),
            dict(type='MultiImgPackSegInputs'),
        ],
        type='OSCD_RGB_CD_Dataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mFscore',
        'mIoU',
    ], type='mmseg.IoUMetric')
train_cfg = dict(max_epochs=100, type='EpochBasedTrainLoop', val_interval=20)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        data_prefix=dict(
            img_path_from='train/A',
            img_path_to='train/B',
            seg_map_path='train/label'),
        data_root=
        '/work/share/achk2o1zg1/diwang22/dataset/OSCD/oscd_rgb_patch_dataset',
        pipeline=[
            dict(type='MultiImgLoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='MultiImgResize'),
            dict(type='MultiImgLoadAnnotations'),
            dict(
                degree=(
                    -20,
                    20,
                ),
                flip_prob=0.5,
                rotate_prob=0.5,
                type='MultiImgRandomRotFlip'),
            dict(
                cat_max_ratio=0.75,
                crop_size=(
                    224,
                    224,
                ),
                type='MultiImgRandomCrop'),
            dict(prob=0.5, type='MultiImgExchangeTime'),
            dict(
                brightness_delta=10,
                contrast_range=(
                    0.8,
                    1.2,
                ),
                hue_delta=10,
                saturation_range=(
                    0.8,
                    1.2,
                ),
                type='MultiImgPhotoMetricDistortion'),
            dict(type='MultiImgPackSegInputs'),
        ],
        type='OSCD_RGB_CD_Dataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='MultiImgLoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='MultiImgResize'),
    dict(type='MultiImgLoadAnnotations'),
    dict(
        degree=(
            -20,
            20,
        ),
        flip_prob=0.5,
        rotate_prob=0.5,
        type='MultiImgRandomRotFlip'),
    dict(
        cat_max_ratio=0.75, crop_size=(
            224,
            224,
        ), type='MultiImgRandomCrop'),
    dict(prob=0.5, type='MultiImgExchangeTime'),
    dict(
        brightness_delta=10,
        contrast_range=(
            0.8,
            1.2,
        ),
        hue_delta=10,
        saturation_range=(
            0.8,
            1.2,
        ),
        type='MultiImgPhotoMetricDistortion'),
    dict(type='MultiImgPackSegInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path_from='test/A',
            img_path_to='test/B',
            seg_map_path='test/label'),
        data_root=
        '/work/share/achk2o1zg1/diwang22/dataset/OSCD/oscd_rgb_patch_dataset',
        pipeline=[
            dict(type='MultiImgLoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='MultiImgResize'),
            dict(type='MultiImgLoadAnnotations'),
            dict(type='MultiImgPackSegInputs'),
        ],
        type='OSCD_RGB_CD_Dataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mFscore',
        'mIoU',
    ], type='mmseg.IoUMetric')
val_pipeline = [
    dict(type='MultiImgLoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='MultiImgResize'),
    dict(type='MultiImgLoadAnnotations'),
    dict(type='MultiImgPackSegInputs'),
]
vis_backends = [
    dict(type='CDLocalVisBackend'),
]
visualizer = dict(
    alpha=1.0,
    name='visualizer',
    type='CDLocalVisualizer',
    vis_backends=[
        dict(type='CDLocalVisBackend'),
    ])
work_dir = '/work/share/achk2o1zg1/diwang22/work_dir/multitask_pretrain/finetune/Change_Detection/oscd_rgb/rvsa-l-unet-96-mae_oscd_rgb'

2024/01/30 21:30:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) CDVisualizationHook                
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/01/30 21:30:08 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
Name of parameter - Initialization information

backbone.pos_embed - torch.Size([1, 196, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.patch_embed.proj.weight - torch.Size([1024, 3, 16, 16]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.patch_embed.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.2.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.2.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.3.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.3.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.4.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.4.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.attn.full_attn_rel_pos_h - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.5.attn.full_attn_rel_pos_w - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.5.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.5.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.6.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.6.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.7.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.7.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.8.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.8.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.9.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.9.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.10.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.10.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.attn.full_attn_rel_pos_h - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.11.attn.full_attn_rel_pos_w - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.11.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.11.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.12.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.12.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.13.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.13.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.14.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.14.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.15.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.15.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.16.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.16.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.attn.full_attn_rel_pos_h - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.17.attn.full_attn_rel_pos_w - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.17.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.17.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.18.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.18.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.19.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.19.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.20.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.20.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.21.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.21.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.attn.rel_pos_h - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.rel_pos_w - torch.Size([13, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_offsets.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_offsets.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_scales.2.weight - torch.Size([32, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_scales.2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_angles.2.weight - torch.Size([16, 1024, 1, 1]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.sampling_angles.2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.22.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.22.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.norm1.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.norm1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.attn.full_attn_rel_pos_h - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.23.attn.full_attn_rel_pos_w - torch.Size([27, 64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.blocks.23.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.norm2.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.norm2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.blocks.23.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.norm.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.norm.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in RVSA_MTP  

backbone.fpn1.0.weight - torch.Size([1024, 1024, 2, 2]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn1.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn1.1.ln.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn1.1.ln.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn1.3.weight - torch.Size([1024, 1024, 2, 2]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn1.3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn2.0.weight - torch.Size([1024, 1024, 2, 2]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

backbone.fpn2.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.blocks.0.conv1.0.weight - torch.Size([512, 2048, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.0.conv1.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.0.conv1.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.0.conv2.0.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.0.conv2.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.0.conv2.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv1.0.weight - torch.Size([256, 1536, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv2.0.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv2.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.1.conv2.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv1.0.weight - torch.Size([128, 1280, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv1.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv1.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv2.0.weight - torch.Size([128, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv2.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.2.conv2.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv1.0.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv1.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv1.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv2.0.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv2.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  

decode_head.blocks.3.conv2.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of SiamEncoderDecoder  
2024/01/30 21:30:22 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/01/30 21:30:22 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/01/30 21:30:22 - mmengine - INFO - Checkpoints will be saved to /work/share/achk2o1zg1/diwang22/work_dir/multitask_pretrain/finetune/Change_Detection/oscd_rgb/rvsa-l-unet-96-mae_oscd_rgb.
2024/01/30 21:30:54 - mmengine - INFO - Epoch(train)   [1][10/26]  base_lr: 4.1861e-06 lr: 3.0052e-07  eta: 2:17:25  time: 3.1837  data_time: 0.0924  memory: 11031  loss: 0.6082  decode.loss_ce: 0.6082  decode.acc_seg: 97.6817
2024/01/30 21:31:16 - mmengine - INFO - Epoch(train)   [1][20/26]  base_lr: 8.8373e-06 lr: 6.3443e-07  eta: 1:56:32  time: 2.7104  data_time: 0.0512  memory: 11026  loss: 0.6160  decode.loss_ce: 0.6160  decode.acc_seg: 98.7019
2024/01/30 21:31:29 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:31:52 - mmengine - INFO - Epoch(train)   [2][10/26]  base_lr: 1.6279e-05 lr: 1.1687e-06  eta: 1:47:05  time: 2.5060  data_time: 0.0385  memory: 11026  loss: 0.6136  decode.loss_ce: 0.6136  decode.acc_seg: 98.5320
2024/01/30 21:32:14 - mmengine - INFO - Epoch(train)   [2][20/26]  base_lr: 2.0930e-05 lr: 1.5026e-06  eta: 1:44:10  time: 2.4472  data_time: 0.0321  memory: 11026  loss: 0.6146  decode.loss_ce: 0.6146  decode.acc_seg: 97.5911
2024/01/30 21:32:28 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:32:50 - mmengine - INFO - Epoch(train)   [3][10/26]  base_lr: 2.8372e-05 lr: 2.0368e-06  eta: 1:41:24  time: 2.2461  data_time: 0.0152  memory: 11026  loss: 0.6097  decode.loss_ce: 0.6097  decode.acc_seg: 93.3372
2024/01/30 21:33:13 - mmengine - INFO - Epoch(train)   [3][20/26]  base_lr: 3.3023e-05 lr: 2.3707e-06  eta: 1:40:04  time: 2.2466  data_time: 0.0152  memory: 11026  loss: 0.6038  decode.loss_ce: 0.6038  decode.acc_seg: 84.8423
2024/01/30 21:33:26 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:33:49 - mmengine - INFO - Epoch(train)   [4][10/26]  base_lr: 4.0465e-05 lr: 2.9050e-06  eta: 1:38:30  time: 2.2475  data_time: 0.0131  memory: 11026  loss: 0.5921  decode.loss_ce: 0.5921  decode.acc_seg: 93.3379
2024/01/30 21:34:11 - mmengine - INFO - Epoch(train)   [4][20/26]  base_lr: 4.5116e-05 lr: 3.2389e-06  eta: 1:37:36  time: 2.2475  data_time: 0.0133  memory: 11026  loss: 0.5801  decode.loss_ce: 0.5801  decode.acc_seg: 94.6855
2024/01/30 21:34:25 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:34:47 - mmengine - INFO - Epoch(train)   [5][10/26]  base_lr: 5.2558e-05 lr: 3.7731e-06  eta: 1:36:28  time: 2.2468  data_time: 0.0136  memory: 11026  loss: 0.5589  decode.loss_ce: 0.5589  decode.acc_seg: 93.6760
2024/01/30 21:35:10 - mmengine - INFO - Epoch(train)   [5][20/26]  base_lr: 5.7209e-05 lr: 4.1070e-06  eta: 1:35:47  time: 2.2467  data_time: 0.0132  memory: 11026  loss: 0.5426  decode.loss_ce: 0.5426  decode.acc_seg: 94.4641
2024/01/30 21:35:23 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:35:46 - mmengine - INFO - Epoch(train)   [6][10/26]  base_lr: 6.0000e-05 lr: 4.3074e-06  eta: 1:34:53  time: 2.2499  data_time: 0.0138  memory: 11026  loss: 0.5172  decode.loss_ce: 0.5172  decode.acc_seg: 99.6412
2024/01/30 21:36:08 - mmengine - INFO - Epoch(train)   [6][20/26]  base_lr: 6.0000e-05 lr: 4.3074e-06  eta: 1:34:21  time: 2.2549  data_time: 0.0136  memory: 11026  loss: 0.5025  decode.loss_ce: 0.5025  decode.acc_seg: 95.3490
2024/01/30 21:36:22 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:36:45 - mmengine - INFO - Epoch(train)   [7][10/26]  base_lr: 5.9984e-05 lr: 4.3062e-06  eta: 1:33:32  time: 2.2576  data_time: 0.0142  memory: 11026  loss: 0.4798  decode.loss_ce: 0.4798  decode.acc_seg: 97.1312
2024/01/30 21:37:07 - mmengine - INFO - Epoch(train)   [7][20/26]  base_lr: 5.9984e-05 lr: 4.3062e-06  eta: 1:33:02  time: 2.2608  data_time: 0.0148  memory: 11026  loss: 0.4659  decode.loss_ce: 0.4659  decode.acc_seg: 98.6477
2024/01/30 21:37:21 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:37:43 - mmengine - INFO - Epoch(train)   [8][10/26]  base_lr: 5.9934e-05 lr: 4.3027e-06  eta: 1:32:17  time: 2.2594  data_time: 0.0145  memory: 11026  loss: 0.4472  decode.loss_ce: 0.4472  decode.acc_seg: 97.6693
2024/01/30 21:38:06 - mmengine - INFO - Epoch(train)   [8][20/26]  base_lr: 5.9934e-05 lr: 4.3027e-06  eta: 1:31:48  time: 2.2570  data_time: 0.0142  memory: 11026  loss: 0.4340  decode.loss_ce: 0.4340  decode.acc_seg: 97.2851
2024/01/30 21:38:19 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:38:42 - mmengine - INFO - Epoch(train)   [9][10/26]  base_lr: 5.9852e-05 lr: 4.2968e-06  eta: 1:31:03  time: 2.2554  data_time: 0.0139  memory: 11026  loss: 0.4182  decode.loss_ce: 0.4182  decode.acc_seg: 97.4718
2024/01/30 21:39:04 - mmengine - INFO - Epoch(train)   [9][20/26]  base_lr: 5.9852e-05 lr: 4.2968e-06  eta: 1:30:35  time: 2.2531  data_time: 0.0136  memory: 11026  loss: 0.4078  decode.loss_ce: 0.4078  decode.acc_seg: 98.6327
2024/01/30 21:39:18 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:39:41 - mmengine - INFO - Epoch(train)  [10][10/26]  base_lr: 5.9738e-05 lr: 4.2886e-06  eta: 1:29:55  time: 2.2551  data_time: 0.0145  memory: 11026  loss: 0.3894  decode.loss_ce: 0.3894  decode.acc_seg: 96.1097
2024/01/30 21:40:03 - mmengine - INFO - Epoch(train)  [10][20/26]  base_lr: 5.9738e-05 lr: 4.2886e-06  eta: 1:29:28  time: 2.2549  data_time: 0.0149  memory: 11026  loss: 0.3808  decode.loss_ce: 0.3808  decode.acc_seg: 94.0470
2024/01/30 21:40:17 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:40:17 - mmengine - INFO - Saving checkpoint at 10 epochs
2024/01/30 21:40:46 - mmengine - INFO - Epoch(train)  [11][10/26]  base_lr: 5.9591e-05 lr: 4.2780e-06  eta: 1:28:58  time: 2.2816  data_time: 0.0321  memory: 11026  loss: 0.3638  decode.loss_ce: 0.3638  decode.acc_seg: 98.5867
2024/01/30 21:41:09 - mmengine - INFO - Epoch(train)  [11][20/26]  base_lr: 5.9591e-05 lr: 4.2780e-06  eta: 1:28:32  time: 2.2831  data_time: 0.0335  memory: 11026  loss: 0.3543  decode.loss_ce: 0.3543  decode.acc_seg: 98.1445
2024/01/30 21:41:22 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:41:45 - mmengine - INFO - Epoch(train)  [12][10/26]  base_lr: 5.9411e-05 lr: 4.2651e-06  eta: 1:27:50  time: 2.2773  data_time: 0.0330  memory: 11026  loss: 0.3378  decode.loss_ce: 0.3378  decode.acc_seg: 97.2929
2024/01/30 21:42:07 - mmengine - INFO - Epoch(train)  [12][20/26]  base_lr: 5.9411e-05 lr: 4.2651e-06  eta: 1:27:24  time: 2.2768  data_time: 0.0322  memory: 11026  loss: 0.3296  decode.loss_ce: 0.3296  decode.acc_seg: 94.8676
2024/01/30 21:42:21 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:42:43 - mmengine - INFO - Epoch(train)  [13][10/26]  base_lr: 5.9200e-05 lr: 4.2499e-06  eta: 1:26:44  time: 2.2490  data_time: 0.0133  memory: 11026  loss: 0.3188  decode.loss_ce: 0.3188  decode.acc_seg: 95.6501
2024/01/30 21:43:06 - mmengine - INFO - Epoch(train)  [13][20/26]  base_lr: 5.9200e-05 lr: 4.2499e-06  eta: 1:26:18  time: 2.2498  data_time: 0.0128  memory: 11026  loss: 0.3093  decode.loss_ce: 0.3093  decode.acc_seg: 96.7349
2024/01/30 21:43:19 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:43:42 - mmengine - INFO - Epoch(train)  [14][10/26]  base_lr: 5.8956e-05 lr: 4.2325e-06  eta: 1:25:38  time: 2.2496  data_time: 0.0133  memory: 11026  loss: 0.2917  decode.loss_ce: 0.2917  decode.acc_seg: 98.7053
2024/01/30 21:44:04 - mmengine - INFO - Epoch(train)  [14][20/26]  base_lr: 5.8956e-05 lr: 4.2325e-06  eta: 1:25:13  time: 2.2482  data_time: 0.0137  memory: 11026  loss: 0.2823  decode.loss_ce: 0.2823  decode.acc_seg: 98.3411
2024/01/30 21:44:17 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:44:40 - mmengine - INFO - Epoch(train)  [15][10/26]  base_lr: 5.8681e-05 lr: 4.2127e-06  eta: 1:24:34  time: 2.2481  data_time: 0.0145  memory: 11026  loss: 0.2660  decode.loss_ce: 0.2660  decode.acc_seg: 98.7645
2024/01/30 21:45:03 - mmengine - INFO - Epoch(train)  [15][20/26]  base_lr: 5.8681e-05 lr: 4.2127e-06  eta: 1:24:09  time: 2.2489  data_time: 0.0149  memory: 11026  loss: 0.2587  decode.loss_ce: 0.2587  decode.acc_seg: 98.4551
2024/01/30 21:45:16 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:45:39 - mmengine - INFO - Epoch(train)  [16][10/26]  base_lr: 5.8375e-05 lr: 4.1907e-06  eta: 1:23:31  time: 2.2537  data_time: 0.0149  memory: 11026  loss: 0.2455  decode.loss_ce: 0.2455  decode.acc_seg: 98.8969
2024/01/30 21:46:04 - mmengine - INFO - Epoch(train)  [16][20/26]  base_lr: 5.8375e-05 lr: 4.1907e-06  eta: 1:23:20  time: 2.3037  data_time: 0.0147  memory: 11026  loss: 0.2365  decode.loss_ce: 0.2365  decode.acc_seg: 97.9976
2024/01/30 21:46:17 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:46:40 - mmengine - INFO - Epoch(train)  [17][10/26]  base_lr: 5.8037e-05 lr: 4.1665e-06  eta: 1:22:43  time: 2.3119  data_time: 0.0146  memory: 11026  loss: 0.2176  decode.loss_ce: 0.2176  decode.acc_seg: 97.5091
2024/01/30 21:47:03 - mmengine - INFO - Epoch(train)  [17][20/26]  base_lr: 5.8037e-05 lr: 4.1665e-06  eta: 1:22:19  time: 2.3129  data_time: 0.0143  memory: 11026  loss: 0.2091  decode.loss_ce: 0.2091  decode.acc_seg: 97.9698
2024/01/30 21:47:16 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:47:39 - mmengine - INFO - Epoch(train)  [18][10/26]  base_lr: 5.7669e-05 lr: 4.1400e-06  eta: 1:21:40  time: 2.3096  data_time: 0.0133  memory: 11026  loss: 0.1960  decode.loss_ce: 0.1960  decode.acc_seg: 96.5196
2024/01/30 21:48:01 - mmengine - INFO - Epoch(train)  [18][20/26]  base_lr: 5.7669e-05 lr: 4.1400e-06  eta: 1:21:15  time: 2.2595  data_time: 0.0128  memory: 11026  loss: 0.1861  decode.loss_ce: 0.1861  decode.acc_seg: 96.1657
2024/01/30 21:48:15 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:48:37 - mmengine - INFO - Epoch(train)  [19][10/26]  base_lr: 5.7270e-05 lr: 4.1114e-06  eta: 1:20:37  time: 2.2496  data_time: 0.0135  memory: 11026  loss: 0.1709  decode.loss_ce: 0.1709  decode.acc_seg: 98.0274
2024/01/30 21:49:00 - mmengine - INFO - Epoch(train)  [19][20/26]  base_lr: 5.7270e-05 lr: 4.1114e-06  eta: 1:20:12  time: 2.2466  data_time: 0.0135  memory: 11026  loss: 0.1631  decode.loss_ce: 0.1631  decode.acc_seg: 97.5331
2024/01/30 21:49:13 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:49:36 - mmengine - INFO - Epoch(train)  [20][10/26]  base_lr: 5.6842e-05 lr: 4.0807e-06  eta: 1:19:33  time: 2.2450  data_time: 0.0137  memory: 11026  loss: 0.1458  decode.loss_ce: 0.1458  decode.acc_seg: 98.1934
2024/01/30 21:49:58 - mmengine - INFO - Epoch(train)  [20][20/26]  base_lr: 5.6842e-05 lr: 4.0807e-06  eta: 1:19:09  time: 2.2453  data_time: 0.0137  memory: 11026  loss: 0.1355  decode.loss_ce: 0.1355  decode.acc_seg: 98.7061
2024/01/30 21:50:11 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:50:11 - mmengine - INFO - Saving checkpoint at 20 epochs
2024/01/30 21:50:24 - mmengine - INFO - Epoch(val)  [20][10/49]    eta: 0:00:25  time: 0.6461  data_time: 0.1057  memory: 11026  
2024/01/30 21:50:26 - mmengine - INFO - Epoch(val)  [20][20/49]    eta: 0:00:13  time: 0.4485  data_time: 0.0751  memory: 6392  
2024/01/30 21:50:29 - mmengine - INFO - Epoch(val)  [20][30/49]    eta: 0:00:07  time: 0.3807  data_time: 0.0645  memory: 6392  
2024/01/30 21:50:31 - mmengine - INFO - Epoch(val)  [20][40/49]    eta: 0:00:03  time: 0.3467  data_time: 0.0591  memory: 6392  
2024/01/30 21:50:33 - mmengine - INFO - per class results:
2024/01/30 21:50:33 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged | 97.51  |   97.01   | 98.01  | 95.14 | 98.01 |
|  changed  | 50.08  |   55.76   | 45.45  | 33.41 | 45.45 |
+-----------+--------+-----------+--------+-------+-------+
2024/01/30 21:50:33 - mmengine - INFO - Epoch(val) [20][49/49]    aAcc: 95.2500  mFscore: 73.8000  mPrecision: 76.3900  mRecall: 71.7300  mIoU: 64.2700  mAcc: 71.7300  data_time: 0.0557  time: 0.3275
2024/01/30 21:50:37 - mmengine - INFO - The best checkpoint with 64.2700 mIoU at 20 epoch is saved to best_mIoU_epoch_20.pth.
2024/01/30 21:51:06 - mmengine - INFO - Epoch(train)  [21][10/26]  base_lr: 5.6384e-05 lr: 4.0478e-06  eta: 1:18:33  time: 2.2538  data_time: 0.0194  memory: 11030  loss: 0.1178  decode.loss_ce: 0.1178  decode.acc_seg: 98.9827
2024/01/30 21:51:28 - mmengine - INFO - Epoch(train)  [21][20/26]  base_lr: 5.6384e-05 lr: 4.0478e-06  eta: 1:18:09  time: 2.2557  data_time: 0.0193  memory: 11026  loss: 0.1058  decode.loss_ce: 0.1058  decode.acc_seg: 96.8533
2024/01/30 21:51:41 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:52:04 - mmengine - INFO - Epoch(train)  [22][10/26]  base_lr: 5.5898e-05 lr: 4.0129e-06  eta: 1:17:31  time: 2.2557  data_time: 0.0195  memory: 11026  loss: 0.0911  decode.loss_ce: 0.0911  decode.acc_seg: 98.1161
2024/01/30 21:52:26 - mmengine - INFO - Epoch(train)  [22][20/26]  base_lr: 5.5898e-05 lr: 4.0129e-06  eta: 1:17:07  time: 2.2557  data_time: 0.0195  memory: 11026  loss: 0.0875  decode.loss_ce: 0.0875  decode.acc_seg: 99.5190
2024/01/30 21:52:40 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:53:02 - mmengine - INFO - Epoch(train)  [23][10/26]  base_lr: 5.5383e-05 lr: 3.9759e-06  eta: 1:16:29  time: 2.2469  data_time: 0.0129  memory: 11026  loss: 0.0824  decode.loss_ce: 0.0824  decode.acc_seg: 98.2069
2024/01/30 21:53:25 - mmengine - INFO - Epoch(train)  [23][20/26]  base_lr: 5.5383e-05 lr: 3.9759e-06  eta: 1:16:05  time: 2.2447  data_time: 0.0131  memory: 11026  loss: 0.0823  decode.loss_ce: 0.0823  decode.acc_seg: 99.3750
2024/01/30 21:53:38 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:54:01 - mmengine - INFO - Epoch(train)  [24][10/26]  base_lr: 5.4840e-05 lr: 3.9370e-06  eta: 1:15:27  time: 2.2448  data_time: 0.0131  memory: 11026  loss: 0.0764  decode.loss_ce: 0.0764  decode.acc_seg: 98.2953
2024/01/30 21:54:23 - mmengine - INFO - Epoch(train)  [24][20/26]  base_lr: 5.4840e-05 lr: 3.9370e-06  eta: 1:15:03  time: 2.2438  data_time: 0.0129  memory: 11026  loss: 0.0765  decode.loss_ce: 0.0765  decode.acc_seg: 99.2275
2024/01/30 21:54:36 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:54:59 - mmengine - INFO - Epoch(train)  [25][10/26]  base_lr: 5.4271e-05 lr: 3.8961e-06  eta: 1:14:26  time: 2.2467  data_time: 0.0129  memory: 11026  loss: 0.0775  decode.loss_ce: 0.0775  decode.acc_seg: 97.7999
2024/01/30 21:55:22 - mmengine - INFO - Epoch(train)  [25][20/26]  base_lr: 5.4271e-05 lr: 3.8961e-06  eta: 1:14:02  time: 2.2474  data_time: 0.0129  memory: 11026  loss: 0.0773  decode.loss_ce: 0.0773  decode.acc_seg: 97.9460
2024/01/30 21:55:35 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:55:58 - mmengine - INFO - Epoch(train)  [26][10/26]  base_lr: 5.3674e-05 lr: 3.8533e-06  eta: 1:13:25  time: 2.2462  data_time: 0.0127  memory: 11026  loss: 0.0778  decode.loss_ce: 0.0778  decode.acc_seg: 99.4303
2024/01/30 21:56:20 - mmengine - INFO - Epoch(train)  [26][20/26]  base_lr: 5.3674e-05 lr: 3.8533e-06  eta: 1:13:01  time: 2.2469  data_time: 0.0128  memory: 11026  loss: 0.0761  decode.loss_ce: 0.0761  decode.acc_seg: 99.1612
2024/01/30 21:56:33 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:56:56 - mmengine - INFO - Epoch(train)  [27][10/26]  base_lr: 5.3052e-05 lr: 3.8086e-06  eta: 1:12:24  time: 2.2448  data_time: 0.0127  memory: 11026  loss: 0.0826  decode.loss_ce: 0.0826  decode.acc_seg: 99.0565
2024/01/30 21:57:18 - mmengine - INFO - Epoch(train)  [27][20/26]  base_lr: 5.3052e-05 lr: 3.8086e-06  eta: 1:12:00  time: 2.2455  data_time: 0.0128  memory: 11026  loss: 0.0834  decode.loss_ce: 0.0834  decode.acc_seg: 94.0467
2024/01/30 21:57:32 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:57:54 - mmengine - INFO - Epoch(train)  [28][10/26]  base_lr: 5.2405e-05 lr: 3.7621e-06  eta: 1:11:23  time: 2.2466  data_time: 0.0128  memory: 11026  loss: 0.0845  decode.loss_ce: 0.0845  decode.acc_seg: 95.9965
2024/01/30 21:58:17 - mmengine - INFO - Epoch(train)  [28][20/26]  base_lr: 5.2405e-05 lr: 3.7621e-06  eta: 1:11:00  time: 2.2457  data_time: 0.0128  memory: 11026  loss: 0.0794  decode.loss_ce: 0.0794  decode.acc_seg: 99.0138
2024/01/30 21:58:30 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:58:53 - mmengine - INFO - Epoch(train)  [29][10/26]  base_lr: 5.1733e-05 lr: 3.7139e-06  eta: 1:10:23  time: 2.2438  data_time: 0.0130  memory: 11026  loss: 0.0752  decode.loss_ce: 0.0752  decode.acc_seg: 93.8384
2024/01/30 21:59:15 - mmengine - INFO - Epoch(train)  [29][20/26]  base_lr: 5.1733e-05 lr: 3.7139e-06  eta: 1:09:59  time: 2.2440  data_time: 0.0131  memory: 11026  loss: 0.0762  decode.loss_ce: 0.0762  decode.acc_seg: 98.8464
2024/01/30 21:59:28 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 21:59:51 - mmengine - INFO - Epoch(train)  [30][10/26]  base_lr: 5.1037e-05 lr: 3.6639e-06  eta: 1:09:23  time: 2.2471  data_time: 0.0129  memory: 11026  loss: 0.0745  decode.loss_ce: 0.0745  decode.acc_seg: 97.1059
2024/01/30 22:00:14 - mmengine - INFO - Epoch(train)  [30][20/26]  base_lr: 5.1037e-05 lr: 3.6639e-06  eta: 1:08:59  time: 2.2480  data_time: 0.0130  memory: 11026  loss: 0.0754  decode.loss_ce: 0.0754  decode.acc_seg: 96.5943
2024/01/30 22:00:27 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:00:27 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/01/30 22:01:01 - mmengine - INFO - Epoch(train)  [31][10/26]  base_lr: 5.0318e-05 lr: 3.6124e-06  eta: 1:08:28  time: 2.2950  data_time: 0.0254  memory: 11026  loss: 0.0704  decode.loss_ce: 0.0704  decode.acc_seg: 99.7089
2024/01/30 22:01:24 - mmengine - INFO - Epoch(train)  [31][20/26]  base_lr: 5.0318e-05 lr: 3.6124e-06  eta: 1:08:05  time: 2.2994  data_time: 0.0263  memory: 11026  loss: 0.0688  decode.loss_ce: 0.0688  decode.acc_seg: 98.4223
2024/01/30 22:01:38 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:02:01 - mmengine - INFO - Epoch(train)  [32][10/26]  base_lr: 4.9578e-05 lr: 3.5592e-06  eta: 1:07:29  time: 2.3084  data_time: 0.0272  memory: 11026  loss: 0.0673  decode.loss_ce: 0.0673  decode.acc_seg: 99.5207
2024/01/30 22:02:23 - mmengine - INFO - Epoch(train)  [32][20/26]  base_lr: 4.9578e-05 lr: 3.5592e-06  eta: 1:07:06  time: 2.3099  data_time: 0.0275  memory: 11026  loss: 0.0630  decode.loss_ce: 0.0630  decode.acc_seg: 99.9664
2024/01/30 22:02:36 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:02:59 - mmengine - INFO - Epoch(train)  [33][10/26]  base_lr: 4.8815e-05 lr: 3.5044e-06  eta: 1:06:29  time: 2.2569  data_time: 0.0155  memory: 11026  loss: 0.0641  decode.loss_ce: 0.0641  decode.acc_seg: 98.8562
2024/01/30 22:03:21 - mmengine - INFO - Epoch(train)  [33][20/26]  base_lr: 4.8815e-05 lr: 3.5044e-06  eta: 1:06:05  time: 2.2546  data_time: 0.0147  memory: 11026  loss: 0.0637  decode.loss_ce: 0.0637  decode.acc_seg: 97.9307
2024/01/30 22:03:35 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:03:57 - mmengine - INFO - Epoch(train)  [34][10/26]  base_lr: 4.8032e-05 lr: 3.4482e-06  eta: 1:05:28  time: 2.2383  data_time: 0.0134  memory: 11026  loss: 0.0613  decode.loss_ce: 0.0613  decode.acc_seg: 98.3453
2024/01/30 22:04:19 - mmengine - INFO - Epoch(train)  [34][20/26]  base_lr: 4.8032e-05 lr: 3.4482e-06  eta: 1:05:04  time: 2.2364  data_time: 0.0128  memory: 11026  loss: 0.0648  decode.loss_ce: 0.0648  decode.acc_seg: 98.6493
2024/01/30 22:04:33 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:04:55 - mmengine - INFO - Epoch(train)  [35][10/26]  base_lr: 4.7230e-05 lr: 3.3906e-06  eta: 1:04:27  time: 2.2351  data_time: 0.0120  memory: 11026  loss: 0.0614  decode.loss_ce: 0.0614  decode.acc_seg: 95.5851
2024/01/30 22:05:18 - mmengine - INFO - Epoch(train)  [35][20/26]  base_lr: 4.7230e-05 lr: 3.3906e-06  eta: 1:04:04  time: 2.2371  data_time: 0.0121  memory: 11026  loss: 0.0678  decode.loss_ce: 0.0678  decode.acc_seg: 98.2400
2024/01/30 22:05:31 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:05:54 - mmengine - INFO - Epoch(train)  [36][10/26]  base_lr: 4.6408e-05 lr: 3.3317e-06  eta: 1:03:27  time: 2.2441  data_time: 0.0130  memory: 11026  loss: 0.0695  decode.loss_ce: 0.0695  decode.acc_seg: 98.5204
2024/01/30 22:06:16 - mmengine - INFO - Epoch(train)  [36][20/26]  base_lr: 4.6408e-05 lr: 3.3317e-06  eta: 1:03:04  time: 2.2444  data_time: 0.0130  memory: 11026  loss: 0.0656  decode.loss_ce: 0.0656  decode.acc_seg: 99.4387
2024/01/30 22:06:29 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:06:52 - mmengine - INFO - Epoch(train)  [37][10/26]  base_lr: 4.5569e-05 lr: 3.2714e-06  eta: 1:02:27  time: 2.2438  data_time: 0.0129  memory: 11026  loss: 0.0648  decode.loss_ce: 0.0648  decode.acc_seg: 99.0238
2024/01/30 22:07:14 - mmengine - INFO - Epoch(train)  [37][20/26]  base_lr: 4.5569e-05 lr: 3.2714e-06  eta: 1:02:04  time: 2.2428  data_time: 0.0133  memory: 11026  loss: 0.0565  decode.loss_ce: 0.0565  decode.acc_seg: 99.8882
2024/01/30 22:07:28 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:07:50 - mmengine - INFO - Epoch(train)  [38][10/26]  base_lr: 4.4713e-05 lr: 3.2099e-06  eta: 1:01:27  time: 2.2420  data_time: 0.0135  memory: 11026  loss: 0.0505  decode.loss_ce: 0.0505  decode.acc_seg: 97.6275
2024/01/30 22:08:13 - mmengine - INFO - Epoch(train)  [38][20/26]  base_lr: 4.4713e-05 lr: 3.2099e-06  eta: 1:01:04  time: 2.2438  data_time: 0.0134  memory: 11026  loss: 0.0569  decode.loss_ce: 0.0569  decode.acc_seg: 99.7692
2024/01/30 22:08:26 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:08:49 - mmengine - INFO - Epoch(train)  [39][10/26]  base_lr: 4.3840e-05 lr: 3.1473e-06  eta: 1:00:28  time: 2.2454  data_time: 0.0136  memory: 11026  loss: 0.0584  decode.loss_ce: 0.0584  decode.acc_seg: 98.6738
2024/01/30 22:08:53 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:09:11 - mmengine - INFO - Epoch(train)  [39][20/26]  base_lr: 4.3840e-05 lr: 3.1473e-06  eta: 1:00:04  time: 2.2416  data_time: 0.0133  memory: 11026  loss: 0.0599  decode.loss_ce: 0.0599  decode.acc_seg: 98.8247
2024/01/30 22:09:24 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:09:47 - mmengine - INFO - Epoch(train)  [40][10/26]  base_lr: 4.2953e-05 lr: 3.0836e-06  eta: 0:59:28  time: 2.2406  data_time: 0.0136  memory: 11026  loss: 0.0649  decode.loss_ce: 0.0649  decode.acc_seg: 96.7430
2024/01/30 22:10:09 - mmengine - INFO - Epoch(train)  [40][20/26]  base_lr: 4.2953e-05 lr: 3.0836e-06  eta: 0:59:05  time: 2.2423  data_time: 0.0135  memory: 11026  loss: 0.0629  decode.loss_ce: 0.0629  decode.acc_seg: 97.8873
2024/01/30 22:10:23 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:10:23 - mmengine - INFO - Saving checkpoint at 40 epochs
2024/01/30 22:10:32 - mmengine - INFO - Epoch(val)  [40][10/49]    eta: 0:00:11  time: 0.2584  data_time: 0.0539  memory: 11026  
2024/01/30 22:10:34 - mmengine - INFO - Epoch(val)  [40][20/49]    eta: 0:00:08  time: 0.2586  data_time: 0.0538  memory: 6392  
2024/01/30 22:10:37 - mmengine - INFO - Epoch(val)  [40][30/49]    eta: 0:00:05  time: 0.2601  data_time: 0.0539  memory: 6392  
2024/01/30 22:10:39 - mmengine - INFO - Epoch(val)  [40][40/49]    eta: 0:00:02  time: 0.2619  data_time: 0.0542  memory: 6392  
2024/01/30 22:10:42 - mmengine - INFO - per class results:
2024/01/30 22:10:42 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged | 97.47  |   97.16   | 97.78  | 95.07 | 97.78 |
|  changed  | 51.32  |   54.66   | 48.35  | 34.51 | 48.35 |
+-----------+--------+-----------+--------+-------+-------+
2024/01/30 22:10:42 - mmengine - INFO - Epoch(val) [40][49/49]    aAcc: 95.1900  mFscore: 74.3900  mPrecision: 75.9100  mRecall: 73.0700  mIoU: 64.7900  mAcc: 73.0700  data_time: 0.0545  time: 0.2631
2024/01/30 22:10:42 - mmengine - INFO - The previous best checkpoint /work/share/achk2o1zg1/diwang22/work_dir/multitask_pretrain/finetune/Change_Detection/oscd_rgb/rvsa-l-unet-96-mae_oscd_rgb/best_mIoU_epoch_20.pth is removed
2024/01/30 22:10:46 - mmengine - INFO - The best checkpoint with 64.7900 mIoU at 40 epoch is saved to best_mIoU_epoch_40.pth.
2024/01/30 22:11:15 - mmengine - INFO - Epoch(train)  [41][10/26]  base_lr: 4.2051e-05 lr: 3.0188e-06  eta: 0:58:29  time: 2.2501  data_time: 0.0186  memory: 11026  loss: 0.0642  decode.loss_ce: 0.0642  decode.acc_seg: 96.8940
2024/01/30 22:11:37 - mmengine - INFO - Epoch(train)  [41][20/26]  base_lr: 4.2051e-05 lr: 3.0188e-06  eta: 0:58:06  time: 2.2528  data_time: 0.0185  memory: 11026  loss: 0.0611  decode.loss_ce: 0.0611  decode.acc_seg: 97.8383
2024/01/30 22:11:51 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:12:13 - mmengine - INFO - Epoch(train)  [42][10/26]  base_lr: 4.1136e-05 lr: 2.9531e-06  eta: 0:57:29  time: 2.2520  data_time: 0.0181  memory: 11026  loss: 0.0555  decode.loss_ce: 0.0555  decode.acc_seg: 98.8158
2024/01/30 22:12:36 - mmengine - INFO - Epoch(train)  [42][20/26]  base_lr: 4.1136e-05 lr: 2.9531e-06  eta: 0:57:06  time: 2.2510  data_time: 0.0183  memory: 11026  loss: 0.0565  decode.loss_ce: 0.0565  decode.acc_seg: 95.3826
2024/01/30 22:12:49 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:13:12 - mmengine - INFO - Epoch(train)  [43][10/26]  base_lr: 4.0209e-05 lr: 2.8866e-06  eta: 0:56:29  time: 2.2436  data_time: 0.0122  memory: 11026  loss: 0.0519  decode.loss_ce: 0.0519  decode.acc_seg: 99.3191
2024/01/30 22:13:34 - mmengine - INFO - Epoch(train)  [43][20/26]  base_lr: 4.0209e-05 lr: 2.8866e-06  eta: 0:56:06  time: 2.2424  data_time: 0.0122  memory: 11026  loss: 0.0570  decode.loss_ce: 0.0570  decode.acc_seg: 96.9497
2024/01/30 22:13:47 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:14:10 - mmengine - INFO - Epoch(train)  [44][10/26]  base_lr: 3.9271e-05 lr: 2.8192e-06  eta: 0:55:30  time: 2.2429  data_time: 0.0123  memory: 11026  loss: 0.0585  decode.loss_ce: 0.0585  decode.acc_seg: 97.4513
2024/01/30 22:14:32 - mmengine - INFO - Epoch(train)  [44][20/26]  base_lr: 3.9271e-05 lr: 2.8192e-06  eta: 0:55:07  time: 2.2423  data_time: 0.0123  memory: 11026  loss: 0.0544  decode.loss_ce: 0.0544  decode.acc_seg: 97.3437
2024/01/30 22:14:46 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:15:08 - mmengine - INFO - Epoch(train)  [45][10/26]  base_lr: 3.8322e-05 lr: 2.7511e-06  eta: 0:54:30  time: 2.2430  data_time: 0.0130  memory: 11026  loss: 0.0585  decode.loss_ce: 0.0585  decode.acc_seg: 97.9143
2024/01/30 22:15:30 - mmengine - INFO - Epoch(train)  [45][20/26]  base_lr: 3.8322e-05 lr: 2.7511e-06  eta: 0:54:07  time: 2.2418  data_time: 0.0129  memory: 11026  loss: 0.0552  decode.loss_ce: 0.0552  decode.acc_seg: 98.5513
2024/01/30 22:15:44 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:16:10 - mmengine - INFO - Epoch(train)  [46][10/26]  base_lr: 3.7365e-05 lr: 2.6824e-06  eta: 0:53:36  time: 2.3204  data_time: 0.0123  memory: 11026  loss: 0.0553  decode.loss_ce: 0.0553  decode.acc_seg: 100.0000
2024/01/30 22:16:33 - mmengine - INFO - Epoch(train)  [46][20/26]  base_lr: 3.7365e-05 lr: 2.6824e-06  eta: 0:53:13  time: 2.3239  data_time: 0.0121  memory: 11026  loss: 0.0537  decode.loss_ce: 0.0537  decode.acc_seg: 99.4452
2024/01/30 22:16:46 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:17:09 - mmengine - INFO - Epoch(train)  [47][10/26]  base_lr: 3.6399e-05 lr: 2.6131e-06  eta: 0:52:37  time: 2.3270  data_time: 0.0116  memory: 11026  loss: 0.0548  decode.loss_ce: 0.0548  decode.acc_seg: 99.0238
2024/01/30 22:17:31 - mmengine - INFO - Epoch(train)  [47][20/26]  base_lr: 3.6399e-05 lr: 2.6131e-06  eta: 0:52:14  time: 2.3311  data_time: 0.0115  memory: 11026  loss: 0.0558  decode.loss_ce: 0.0558  decode.acc_seg: 99.5884
2024/01/30 22:17:45 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:18:08 - mmengine - INFO - Epoch(train)  [48][10/26]  base_lr: 3.5426e-05 lr: 2.5433e-06  eta: 0:51:37  time: 2.2547  data_time: 0.0123  memory: 11026  loss: 0.0543  decode.loss_ce: 0.0543  decode.acc_seg: 99.4291
2024/01/30 22:18:30 - mmengine - INFO - Epoch(train)  [48][20/26]  base_lr: 3.5426e-05 lr: 2.5433e-06  eta: 0:51:14  time: 2.2527  data_time: 0.0122  memory: 11026  loss: 0.0559  decode.loss_ce: 0.0559  decode.acc_seg: 96.5864
2024/01/30 22:18:43 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:19:06 - mmengine - INFO - Epoch(train)  [49][10/26]  base_lr: 3.4448e-05 lr: 2.4730e-06  eta: 0:50:38  time: 2.2503  data_time: 0.0133  memory: 11026  loss: 0.0522  decode.loss_ce: 0.0522  decode.acc_seg: 98.2857
2024/01/30 22:19:28 - mmengine - INFO - Epoch(train)  [49][20/26]  base_lr: 3.4448e-05 lr: 2.4730e-06  eta: 0:50:15  time: 2.2461  data_time: 0.0132  memory: 11026  loss: 0.0550  decode.loss_ce: 0.0550  decode.acc_seg: 98.5467
2024/01/30 22:19:42 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:20:04 - mmengine - INFO - Epoch(train)  [50][10/26]  base_lr: 3.3465e-05 lr: 2.4024e-06  eta: 0:49:38  time: 2.2444  data_time: 0.0130  memory: 11026  loss: 0.0545  decode.loss_ce: 0.0545  decode.acc_seg: 98.4103
2024/01/30 22:20:27 - mmengine - INFO - Epoch(train)  [50][20/26]  base_lr: 3.3465e-05 lr: 2.4024e-06  eta: 0:49:15  time: 2.2420  data_time: 0.0130  memory: 11026  loss: 0.0538  decode.loss_ce: 0.0538  decode.acc_seg: 99.1697
2024/01/30 22:20:40 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:20:40 - mmengine - INFO - Saving checkpoint at 50 epochs
2024/01/30 22:21:09 - mmengine - INFO - Epoch(train)  [51][10/26]  base_lr: 3.2477e-05 lr: 2.3315e-06  eta: 0:48:39  time: 2.2485  data_time: 0.0185  memory: 11026  loss: 0.0555  decode.loss_ce: 0.0555  decode.acc_seg: 99.3053
2024/01/30 22:21:31 - mmengine - INFO - Epoch(train)  [51][20/26]  base_lr: 3.2477e-05 lr: 2.3315e-06  eta: 0:48:16  time: 2.2493  data_time: 0.0186  memory: 11026  loss: 0.0536  decode.loss_ce: 0.0536  decode.acc_seg: 99.2308
2024/01/30 22:21:45 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:22:07 - mmengine - INFO - Epoch(train)  [52][10/26]  base_lr: 3.1488e-05 lr: 2.2605e-06  eta: 0:47:40  time: 2.2482  data_time: 0.0183  memory: 11026  loss: 0.0509  decode.loss_ce: 0.0509  decode.acc_seg: 99.2325
2024/01/30 22:22:29 - mmengine - INFO - Epoch(train)  [52][20/26]  base_lr: 3.1488e-05 lr: 2.2605e-06  eta: 0:47:17  time: 2.2499  data_time: 0.0185  memory: 11026  loss: 0.0490  decode.loss_ce: 0.0490  decode.acc_seg: 99.8937
2024/01/30 22:22:43 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:23:05 - mmengine - INFO - Epoch(train)  [53][10/26]  base_lr: 3.0496e-05 lr: 2.1893e-06  eta: 0:46:41  time: 2.2422  data_time: 0.0134  memory: 11026  loss: 0.0443  decode.loss_ce: 0.0443  decode.acc_seg: 97.9303
2024/01/30 22:23:28 - mmengine - INFO - Epoch(train)  [53][20/26]  base_lr: 3.0496e-05 lr: 2.1893e-06  eta: 0:46:18  time: 2.2402  data_time: 0.0137  memory: 11026  loss: 0.0447  decode.loss_ce: 0.0447  decode.acc_seg: 99.1685
2024/01/30 22:23:41 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:24:04 - mmengine - INFO - Epoch(train)  [54][10/26]  base_lr: 2.9504e-05 lr: 2.1181e-06  eta: 0:45:41  time: 2.2408  data_time: 0.0134  memory: 11026  loss: 0.0455  decode.loss_ce: 0.0455  decode.acc_seg: 99.4175
2024/01/30 22:24:26 - mmengine - INFO - Epoch(train)  [54][20/26]  base_lr: 2.9504e-05 lr: 2.1181e-06  eta: 0:45:18  time: 2.2409  data_time: 0.0134  memory: 11026  loss: 0.0458  decode.loss_ce: 0.0458  decode.acc_seg: 99.5181
2024/01/30 22:24:39 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:25:02 - mmengine - INFO - Epoch(train)  [55][10/26]  base_lr: 2.8512e-05 lr: 2.0469e-06  eta: 0:44:42  time: 2.2410  data_time: 0.0122  memory: 11026  loss: 0.0454  decode.loss_ce: 0.0454  decode.acc_seg: 99.5682
2024/01/30 22:25:25 - mmengine - INFO - Epoch(train)  [55][20/26]  base_lr: 2.8512e-05 lr: 2.0469e-06  eta: 0:44:19  time: 2.2481  data_time: 0.0121  memory: 11026  loss: 0.0462  decode.loss_ce: 0.0462  decode.acc_seg: 99.5026
2024/01/30 22:25:38 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:26:01 - mmengine - INFO - Epoch(train)  [56][10/26]  base_lr: 2.7523e-05 lr: 1.9758e-06  eta: 0:43:43  time: 2.2517  data_time: 0.0126  memory: 11026  loss: 0.0515  decode.loss_ce: 0.0515  decode.acc_seg: 98.4779
2024/01/30 22:26:23 - mmengine - INFO - Epoch(train)  [56][20/26]  base_lr: 2.7523e-05 lr: 1.9758e-06  eta: 0:43:20  time: 2.2491  data_time: 0.0126  memory: 11026  loss: 0.0538  decode.loss_ce: 0.0538  decode.acc_seg: 99.6165
2024/01/30 22:26:36 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:26:59 - mmengine - INFO - Epoch(train)  [57][10/26]  base_lr: 2.6535e-05 lr: 1.9050e-06  eta: 0:42:44  time: 2.2474  data_time: 0.0123  memory: 11026  loss: 0.0510  decode.loss_ce: 0.0510  decode.acc_seg: 97.7239
2024/01/30 22:27:21 - mmengine - INFO - Epoch(train)  [57][20/26]  base_lr: 2.6535e-05 lr: 1.9050e-06  eta: 0:42:21  time: 2.2430  data_time: 0.0130  memory: 11026  loss: 0.0567  decode.loss_ce: 0.0567  decode.acc_seg: 98.0465
2024/01/30 22:27:35 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:27:57 - mmengine - INFO - Epoch(train)  [58][10/26]  base_lr: 2.5552e-05 lr: 1.8344e-06  eta: 0:41:45  time: 2.2413  data_time: 0.0131  memory: 11026  loss: 0.0533  decode.loss_ce: 0.0533  decode.acc_seg: 97.3526
2024/01/30 22:28:23 - mmengine - INFO - Epoch(train)  [58][20/26]  base_lr: 2.5552e-05 lr: 1.8344e-06  eta: 0:41:24  time: 2.3131  data_time: 0.0133  memory: 11026  loss: 0.0528  decode.loss_ce: 0.0528  decode.acc_seg: 98.8861
2024/01/30 22:28:36 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:28:59 - mmengine - INFO - Epoch(train)  [59][10/26]  base_lr: 2.4574e-05 lr: 1.7641e-06  eta: 0:40:48  time: 2.3143  data_time: 0.0141  memory: 11026  loss: 0.0479  decode.loss_ce: 0.0479  decode.acc_seg: 99.8942
2024/01/30 22:29:21 - mmengine - INFO - Epoch(train)  [59][20/26]  base_lr: 2.4574e-05 lr: 1.7641e-06  eta: 0:40:25  time: 2.3125  data_time: 0.0134  memory: 11026  loss: 0.0485  decode.loss_ce: 0.0485  decode.acc_seg: 99.6507
2024/01/30 22:29:35 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:29:57 - mmengine - INFO - Epoch(train)  [60][10/26]  base_lr: 2.3601e-05 lr: 1.6943e-06  eta: 0:39:49  time: 2.3119  data_time: 0.0135  memory: 11026  loss: 0.0489  decode.loss_ce: 0.0489  decode.acc_seg: 99.5470
2024/01/30 22:30:20 - mmengine - INFO - Epoch(train)  [60][20/26]  base_lr: 2.3601e-05 lr: 1.6943e-06  eta: 0:39:26  time: 2.2426  data_time: 0.0135  memory: 11026  loss: 0.0510  decode.loss_ce: 0.0510  decode.acc_seg: 99.3603
2024/01/30 22:30:33 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:30:33 - mmengine - INFO - Saving checkpoint at 60 epochs
2024/01/30 22:30:42 - mmengine - INFO - Epoch(val)  [60][10/49]    eta: 0:00:11  time: 0.2597  data_time: 0.0523  memory: 11026  
2024/01/30 22:30:44 - mmengine - INFO - Epoch(val)  [60][20/49]    eta: 0:00:07  time: 0.2585  data_time: 0.0526  memory: 6392  
2024/01/30 22:30:47 - mmengine - INFO - Epoch(val)  [60][30/49]    eta: 0:00:04  time: 0.2565  data_time: 0.0523  memory: 6392  
2024/01/30 22:30:49 - mmengine - INFO - Epoch(val)  [60][40/49]    eta: 0:00:02  time: 0.2546  data_time: 0.0522  memory: 6392  
2024/01/30 22:30:51 - mmengine - INFO - per class results:
2024/01/30 22:30:51 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged | 97.59  |   96.86   | 98.34  |  95.3 | 98.34 |
|  changed  | 49.08  |   58.43   | 42.31  | 32.52 | 42.31 |
+-----------+--------+-----------+--------+-------+-------+
2024/01/30 22:30:51 - mmengine - INFO - Epoch(val) [60][49/49]    aAcc: 95.4000  mFscore: 73.3400  mPrecision: 77.6400  mRecall: 70.3200  mIoU: 63.9100  mAcc: 70.3200  data_time: 0.0523  time: 0.2537
2024/01/30 22:31:17 - mmengine - INFO - Epoch(train)  [61][10/26]  base_lr: 2.2635e-05 lr: 1.6250e-06  eta: 0:38:52  time: 2.3089  data_time: 0.0150  memory: 11026  loss: 0.0503  decode.loss_ce: 0.0503  decode.acc_seg: 99.1808
2024/01/30 22:31:40 - mmengine - INFO - Epoch(train)  [61][20/26]  base_lr: 2.2635e-05 lr: 1.6250e-06  eta: 0:38:29  time: 2.3089  data_time: 0.0148  memory: 11026  loss: 0.0453  decode.loss_ce: 0.0453  decode.acc_seg: 99.1596
2024/01/30 22:31:53 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:32:16 - mmengine - INFO - Epoch(train)  [62][10/26]  base_lr: 2.1678e-05 lr: 1.5563e-06  eta: 0:37:53  time: 2.3149  data_time: 0.0150  memory: 11026  loss: 0.0427  decode.loss_ce: 0.0427  decode.acc_seg: 99.0457
2024/01/30 22:32:38 - mmengine - INFO - Epoch(train)  [62][20/26]  base_lr: 2.1678e-05 lr: 1.5563e-06  eta: 0:37:30  time: 2.3133  data_time: 0.0150  memory: 11026  loss: 0.0409  decode.loss_ce: 0.0409  decode.acc_seg: 98.4662
2024/01/30 22:32:51 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:33:14 - mmengine - INFO - Epoch(train)  [63][10/26]  base_lr: 2.0729e-05 lr: 1.4882e-06  eta: 0:36:54  time: 2.2483  data_time: 0.0138  memory: 11026  loss: 0.0431  decode.loss_ce: 0.0431  decode.acc_seg: 97.8643
2024/01/30 22:33:36 - mmengine - INFO - Epoch(train)  [63][20/26]  base_lr: 2.0729e-05 lr: 1.4882e-06  eta: 0:36:31  time: 2.2436  data_time: 0.0137  memory: 11026  loss: 0.0423  decode.loss_ce: 0.0423  decode.acc_seg: 99.3598
2024/01/30 22:33:50 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:34:12 - mmengine - INFO - Epoch(train)  [64][10/26]  base_lr: 1.9791e-05 lr: 1.4208e-06  eta: 0:35:54  time: 2.2393  data_time: 0.0139  memory: 11026  loss: 0.0432  decode.loss_ce: 0.0432  decode.acc_seg: 99.2292
2024/01/30 22:34:35 - mmengine - INFO - Epoch(train)  [64][20/26]  base_lr: 1.9791e-05 lr: 1.4208e-06  eta: 0:35:31  time: 2.2410  data_time: 0.0144  memory: 11026  loss: 0.0429  decode.loss_ce: 0.0429  decode.acc_seg: 98.5170
2024/01/30 22:34:48 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:35:11 - mmengine - INFO - Epoch(train)  [65][10/26]  base_lr: 1.8864e-05 lr: 1.3542e-06  eta: 0:34:55  time: 2.2400  data_time: 0.0138  memory: 11026  loss: 0.0436  decode.loss_ce: 0.0436  decode.acc_seg: 97.5433
2024/01/30 22:35:33 - mmengine - INFO - Epoch(train)  [65][20/26]  base_lr: 1.8864e-05 lr: 1.3542e-06  eta: 0:34:32  time: 2.2429  data_time: 0.0140  memory: 11026  loss: 0.0463  decode.loss_ce: 0.0463  decode.acc_seg: 98.9546
2024/01/30 22:35:47 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:36:09 - mmengine - INFO - Epoch(train)  [66][10/26]  base_lr: 1.7949e-05 lr: 1.2886e-06  eta: 0:33:56  time: 2.2457  data_time: 0.0135  memory: 11026  loss: 0.0471  decode.loss_ce: 0.0471  decode.acc_seg: 99.1343
2024/01/30 22:36:31 - mmengine - INFO - Epoch(train)  [66][20/26]  base_lr: 1.7949e-05 lr: 1.2886e-06  eta: 0:33:33  time: 2.2465  data_time: 0.0130  memory: 11026  loss: 0.0463  decode.loss_ce: 0.0463  decode.acc_seg: 98.3758
2024/01/30 22:36:45 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:37:07 - mmengine - INFO - Epoch(train)  [67][10/26]  base_lr: 1.7047e-05 lr: 1.2238e-06  eta: 0:32:57  time: 2.2454  data_time: 0.0123  memory: 11026  loss: 0.0460  decode.loss_ce: 0.0460  decode.acc_seg: 97.0080
2024/01/30 22:37:30 - mmengine - INFO - Epoch(train)  [67][20/26]  base_lr: 1.7047e-05 lr: 1.2238e-06  eta: 0:32:34  time: 2.2465  data_time: 0.0122  memory: 11026  loss: 0.0494  decode.loss_ce: 0.0494  decode.acc_seg: 98.7785
2024/01/30 22:37:43 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:38:06 - mmengine - INFO - Epoch(train)  [68][10/26]  base_lr: 1.6160e-05 lr: 1.1601e-06  eta: 0:31:58  time: 2.2450  data_time: 0.0121  memory: 11026  loss: 0.0489  decode.loss_ce: 0.0489  decode.acc_seg: 98.8847
2024/01/30 22:38:28 - mmengine - INFO - Epoch(train)  [68][20/26]  base_lr: 1.6160e-05 lr: 1.1601e-06  eta: 0:31:35  time: 2.2447  data_time: 0.0121  memory: 11026  loss: 0.0462  decode.loss_ce: 0.0462  decode.acc_seg: 98.9132
2024/01/30 22:38:42 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:39:04 - mmengine - INFO - Epoch(train)  [69][10/26]  base_lr: 1.5287e-05 lr: 1.0975e-06  eta: 0:30:59  time: 2.2438  data_time: 0.0122  memory: 11026  loss: 0.0435  decode.loss_ce: 0.0435  decode.acc_seg: 94.7742
2024/01/30 22:39:27 - mmengine - INFO - Epoch(train)  [69][20/26]  base_lr: 1.5287e-05 lr: 1.0975e-06  eta: 0:30:36  time: 2.2436  data_time: 0.0122  memory: 11026  loss: 0.0423  decode.loss_ce: 0.0423  decode.acc_seg: 98.6296
2024/01/30 22:39:40 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:40:03 - mmengine - INFO - Epoch(train)  [70][10/26]  base_lr: 1.4431e-05 lr: 1.0360e-06  eta: 0:30:00  time: 2.2445  data_time: 0.0123  memory: 11026  loss: 0.0476  decode.loss_ce: 0.0476  decode.acc_seg: 99.5579
2024/01/30 22:40:25 - mmengine - INFO - Epoch(train)  [70][20/26]  base_lr: 1.4431e-05 lr: 1.0360e-06  eta: 0:29:37  time: 2.2474  data_time: 0.0127  memory: 11026  loss: 0.0454  decode.loss_ce: 0.0454  decode.acc_seg: 97.4930
2024/01/30 22:40:38 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:40:38 - mmengine - INFO - Saving checkpoint at 70 epochs
2024/01/30 22:41:09 - mmengine - INFO - Epoch(train)  [71][10/26]  base_lr: 1.3592e-05 lr: 9.7574e-07  eta: 0:29:02  time: 2.2734  data_time: 0.0347  memory: 11026  loss: 0.0454  decode.loss_ce: 0.0454  decode.acc_seg: 98.8593
2024/01/30 22:41:31 - mmengine - INFO - Epoch(train)  [71][20/26]  base_lr: 1.3592e-05 lr: 9.7574e-07  eta: 0:28:39  time: 2.2732  data_time: 0.0354  memory: 11026  loss: 0.0448  decode.loss_ce: 0.0448  decode.acc_seg: 98.4116
2024/01/30 22:41:45 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:42:07 - mmengine - INFO - Epoch(train)  [72][10/26]  base_lr: 1.2770e-05 lr: 9.1677e-07  eta: 0:28:02  time: 2.2713  data_time: 0.0355  memory: 11026  loss: 0.0408  decode.loss_ce: 0.0408  decode.acc_seg: 97.6067
2024/01/30 22:42:30 - mmengine - INFO - Epoch(train)  [72][20/26]  base_lr: 1.2770e-05 lr: 9.1677e-07  eta: 0:27:40  time: 2.2710  data_time: 0.0354  memory: 11026  loss: 0.0401  decode.loss_ce: 0.0401  decode.acc_seg: 99.9729
2024/01/30 22:42:43 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:43:06 - mmengine - INFO - Epoch(train)  [73][10/26]  base_lr: 1.1968e-05 lr: 8.5915e-07  eta: 0:27:04  time: 2.2465  data_time: 0.0137  memory: 11026  loss: 0.0400  decode.loss_ce: 0.0400  decode.acc_seg: 97.5067
2024/01/30 22:43:32 - mmengine - INFO - Epoch(train)  [73][20/26]  base_lr: 1.1968e-05 lr: 8.5915e-07  eta: 0:26:42  time: 2.3302  data_time: 0.0135  memory: 11026  loss: 0.0406  decode.loss_ce: 0.0406  decode.acc_seg: 97.2436
2024/01/30 22:43:46 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:44:08 - mmengine - INFO - Epoch(train)  [74][10/26]  base_lr: 1.1185e-05 lr: 8.0295e-07  eta: 0:26:06  time: 2.3319  data_time: 0.0129  memory: 11026  loss: 0.0414  decode.loss_ce: 0.0414  decode.acc_seg: 98.1092
2024/01/30 22:44:31 - mmengine - INFO - Epoch(train)  [74][20/26]  base_lr: 1.1185e-05 lr: 8.0295e-07  eta: 0:25:43  time: 2.3324  data_time: 0.0124  memory: 11026  loss: 0.0438  decode.loss_ce: 0.0438  decode.acc_seg: 99.5416
2024/01/30 22:44:44 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:45:07 - mmengine - INFO - Epoch(train)  [75][10/26]  base_lr: 1.0422e-05 lr: 7.4822e-07  eta: 0:25:07  time: 2.2536  data_time: 0.0123  memory: 11026  loss: 0.0482  decode.loss_ce: 0.0482  decode.acc_seg: 97.5018
2024/01/30 22:45:29 - mmengine - INFO - Epoch(train)  [75][20/26]  base_lr: 1.0422e-05 lr: 7.4822e-07  eta: 0:24:44  time: 2.2459  data_time: 0.0123  memory: 11026  loss: 0.0478  decode.loss_ce: 0.0478  decode.acc_seg: 99.9244
2024/01/30 22:45:43 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:46:05 - mmengine - INFO - Epoch(train)  [76][10/26]  base_lr: 9.6816e-06 lr: 6.9504e-07  eta: 0:24:08  time: 2.2446  data_time: 0.0118  memory: 11026  loss: 0.0440  decode.loss_ce: 0.0440  decode.acc_seg: 99.7175
2024/01/30 22:46:28 - mmengine - INFO - Epoch(train)  [76][20/26]  base_lr: 9.6816e-06 lr: 6.9504e-07  eta: 0:23:45  time: 2.2477  data_time: 0.0119  memory: 11026  loss: 0.0485  decode.loss_ce: 0.0485  decode.acc_seg: 98.8681
2024/01/30 22:46:41 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:47:04 - mmengine - INFO - Epoch(train)  [77][10/26]  base_lr: 8.9629e-06 lr: 6.4344e-07  eta: 0:23:09  time: 2.2490  data_time: 0.0126  memory: 11026  loss: 0.0413  decode.loss_ce: 0.0413  decode.acc_seg: 98.9552
2024/01/30 22:47:26 - mmengine - INFO - Epoch(train)  [77][20/26]  base_lr: 8.9629e-06 lr: 6.4344e-07  eta: 0:22:46  time: 2.2524  data_time: 0.0130  memory: 11026  loss: 0.0417  decode.loss_ce: 0.0417  decode.acc_seg: 99.7450
2024/01/30 22:47:35 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:47:40 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:48:02 - mmengine - INFO - Epoch(train)  [78][10/26]  base_lr: 8.2672e-06 lr: 5.9350e-07  eta: 0:22:10  time: 2.2542  data_time: 0.0140  memory: 11026  loss: 0.0430  decode.loss_ce: 0.0430  decode.acc_seg: 99.0639
2024/01/30 22:48:25 - mmengine - INFO - Epoch(train)  [78][20/26]  base_lr: 8.2672e-06 lr: 5.9350e-07  eta: 0:21:48  time: 2.2541  data_time: 0.0143  memory: 11026  loss: 0.0399  decode.loss_ce: 0.0399  decode.acc_seg: 97.9474
2024/01/30 22:48:38 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:49:01 - mmengine - INFO - Epoch(train)  [79][10/26]  base_lr: 7.5954e-06 lr: 5.4527e-07  eta: 0:21:11  time: 2.2545  data_time: 0.0141  memory: 11026  loss: 0.0437  decode.loss_ce: 0.0437  decode.acc_seg: 99.4021
2024/01/30 22:49:24 - mmengine - INFO - Epoch(train)  [79][20/26]  base_lr: 7.5954e-06 lr: 5.4527e-07  eta: 0:20:49  time: 2.2567  data_time: 0.0140  memory: 11026  loss: 0.0461  decode.loss_ce: 0.0461  decode.acc_seg: 94.1574
2024/01/30 22:49:37 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:50:00 - mmengine - INFO - Epoch(train)  [80][10/26]  base_lr: 6.9480e-06 lr: 4.9879e-07  eta: 0:20:12  time: 2.2541  data_time: 0.0144  memory: 11026  loss: 0.0440  decode.loss_ce: 0.0440  decode.acc_seg: 99.6872
2024/01/30 22:50:22 - mmengine - INFO - Epoch(train)  [80][20/26]  base_lr: 6.9480e-06 lr: 4.9879e-07  eta: 0:19:50  time: 2.2519  data_time: 0.0140  memory: 11026  loss: 0.0444  decode.loss_ce: 0.0444  decode.acc_seg: 99.2910
2024/01/30 22:50:36 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:50:36 - mmengine - INFO - Saving checkpoint at 80 epochs
2024/01/30 22:50:44 - mmengine - INFO - Epoch(val)  [80][10/49]    eta: 0:00:11  time: 0.2532  data_time: 0.0516  memory: 11026  
2024/01/30 22:50:47 - mmengine - INFO - Epoch(val)  [80][20/49]    eta: 0:00:07  time: 0.2533  data_time: 0.0515  memory: 6392  
2024/01/30 22:50:49 - mmengine - INFO - Epoch(val)  [80][30/49]    eta: 0:00:04  time: 0.2535  data_time: 0.0516  memory: 6392  
2024/01/30 22:50:52 - mmengine - INFO - Epoch(val)  [80][40/49]    eta: 0:00:02  time: 0.2536  data_time: 0.0516  memory: 6392  
2024/01/30 22:50:54 - mmengine - INFO - per class results:
2024/01/30 22:50:54 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged | 97.55  |    97.3   | 97.79  | 95.21 | 97.79 |
|  changed  | 53.38  |   56.03   | 50.97  | 36.41 | 50.97 |
+-----------+--------+-----------+--------+-------+-------+
2024/01/30 22:50:54 - mmengine - INFO - Epoch(val) [80][49/49]    aAcc: 95.3400  mFscore: 75.4600  mPrecision: 76.6700  mRecall: 74.3800  mIoU: 65.8100  mAcc: 74.3800  data_time: 0.0519  time: 0.2539
2024/01/30 22:50:54 - mmengine - INFO - The previous best checkpoint /work/share/achk2o1zg1/diwang22/work_dir/multitask_pretrain/finetune/Change_Detection/oscd_rgb/rvsa-l-unet-96-mae_oscd_rgb/best_mIoU_epoch_40.pth is removed
2024/01/30 22:51:01 - mmengine - INFO - The best checkpoint with 65.8100 mIoU at 80 epoch is saved to best_mIoU_epoch_80.pth.
2024/01/30 22:51:31 - mmengine - INFO - Epoch(train)  [81][10/26]  base_lr: 6.3258e-06 lr: 4.5413e-07  eta: 0:19:14  time: 2.2664  data_time: 0.0253  memory: 11026  loss: 0.0413  decode.loss_ce: 0.0413  decode.acc_seg: 99.8098
2024/01/30 22:51:54 - mmengine - INFO - Epoch(train)  [81][20/26]  base_lr: 6.3258e-06 lr: 4.5413e-07  eta: 0:18:51  time: 2.2665  data_time: 0.0255  memory: 11026  loss: 0.0362  decode.loss_ce: 0.0362  decode.acc_seg: 99.5962
2024/01/30 22:52:07 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:52:30 - mmengine - INFO - Epoch(train)  [82][10/26]  base_lr: 5.7295e-06 lr: 4.1132e-07  eta: 0:18:15  time: 2.2658  data_time: 0.0257  memory: 11026  loss: 0.0408  decode.loss_ce: 0.0408  decode.acc_seg: 99.6194
2024/01/30 22:52:52 - mmengine - INFO - Epoch(train)  [82][20/26]  base_lr: 5.7295e-06 lr: 4.1132e-07  eta: 0:17:52  time: 2.2664  data_time: 0.0255  memory: 11026  loss: 0.0427  decode.loss_ce: 0.0427  decode.acc_seg: 98.9778
2024/01/30 22:53:06 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:53:28 - mmengine - INFO - Epoch(train)  [83][10/26]  base_lr: 5.1597e-06 lr: 3.7042e-07  eta: 0:17:16  time: 2.2491  data_time: 0.0131  memory: 11026  loss: 0.0424  decode.loss_ce: 0.0424  decode.acc_seg: 98.9863
2024/01/30 22:53:51 - mmengine - INFO - Epoch(train)  [83][20/26]  base_lr: 5.1597e-06 lr: 3.7042e-07  eta: 0:16:53  time: 2.2477  data_time: 0.0126  memory: 11026  loss: 0.0432  decode.loss_ce: 0.0432  decode.acc_seg: 99.4781
2024/01/30 22:54:04 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:54:27 - mmengine - INFO - Epoch(train)  [84][10/26]  base_lr: 4.6171e-06 lr: 3.3146e-07  eta: 0:16:17  time: 2.2454  data_time: 0.0121  memory: 11026  loss: 0.0411  decode.loss_ce: 0.0411  decode.acc_seg: 99.4958
2024/01/30 22:54:49 - mmengine - INFO - Epoch(train)  [84][20/26]  base_lr: 4.6171e-06 lr: 3.3146e-07  eta: 0:15:54  time: 2.2410  data_time: 0.0121  memory: 11026  loss: 0.0415  decode.loss_ce: 0.0415  decode.acc_seg: 98.1525
2024/01/30 22:55:02 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:55:25 - mmengine - INFO - Epoch(train)  [85][10/26]  base_lr: 4.1023e-06 lr: 2.9450e-07  eta: 0:15:18  time: 2.2402  data_time: 0.0123  memory: 11026  loss: 0.0443  decode.loss_ce: 0.0443  decode.acc_seg: 97.4369
2024/01/30 22:55:47 - mmengine - INFO - Epoch(train)  [85][20/26]  base_lr: 4.1023e-06 lr: 2.9450e-07  eta: 0:14:55  time: 2.2394  data_time: 0.0126  memory: 11026  loss: 0.0446  decode.loss_ce: 0.0446  decode.acc_seg: 99.3482
2024/01/30 22:56:01 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:56:23 - mmengine - INFO - Epoch(train)  [86][10/26]  base_lr: 3.6158e-06 lr: 2.5958e-07  eta: 0:14:19  time: 2.2382  data_time: 0.0124  memory: 11026  loss: 0.0457  decode.loss_ce: 0.0457  decode.acc_seg: 99.2623
2024/01/30 22:56:45 - mmengine - INFO - Epoch(train)  [86][20/26]  base_lr: 3.6158e-06 lr: 2.5958e-07  eta: 0:13:56  time: 2.2395  data_time: 0.0127  memory: 11026  loss: 0.0421  decode.loss_ce: 0.0421  decode.acc_seg: 99.0298
2024/01/30 22:56:59 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:57:21 - mmengine - INFO - Epoch(train)  [87][10/26]  base_lr: 3.1581e-06 lr: 2.2672e-07  eta: 0:13:20  time: 2.2370  data_time: 0.0124  memory: 11026  loss: 0.0401  decode.loss_ce: 0.0401  decode.acc_seg: 99.2921
2024/01/30 22:57:44 - mmengine - INFO - Epoch(train)  [87][20/26]  base_lr: 3.1581e-06 lr: 2.2672e-07  eta: 0:12:57  time: 2.2353  data_time: 0.0124  memory: 11026  loss: 0.0410  decode.loss_ce: 0.0410  decode.acc_seg: 99.2277
2024/01/30 22:57:57 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:58:19 - mmengine - INFO - Epoch(train)  [88][10/26]  base_lr: 2.7298e-06 lr: 1.9597e-07  eta: 0:12:21  time: 2.2354  data_time: 0.0124  memory: 11026  loss: 0.0407  decode.loss_ce: 0.0407  decode.acc_seg: 98.9996
2024/01/30 22:58:42 - mmengine - INFO - Epoch(train)  [88][20/26]  base_lr: 2.7298e-06 lr: 1.9597e-07  eta: 0:11:59  time: 2.2360  data_time: 0.0126  memory: 11026  loss: 0.0410  decode.loss_ce: 0.0410  decode.acc_seg: 99.0785
2024/01/30 22:58:55 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 22:59:18 - mmengine - INFO - Epoch(train)  [89][10/26]  base_lr: 2.3313e-06 lr: 1.6736e-07  eta: 0:11:22  time: 2.2380  data_time: 0.0126  memory: 11026  loss: 0.0438  decode.loss_ce: 0.0438  decode.acc_seg: 98.5916
2024/01/30 22:59:40 - mmengine - INFO - Epoch(train)  [89][20/26]  base_lr: 2.3313e-06 lr: 1.6736e-07  eta: 0:11:00  time: 2.2399  data_time: 0.0127  memory: 11026  loss: 0.0436  decode.loss_ce: 0.0436  decode.acc_seg: 99.2783
2024/01/30 22:59:54 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:00:16 - mmengine - INFO - Epoch(train)  [90][10/26]  base_lr: 1.9631e-06 lr: 1.4093e-07  eta: 0:10:24  time: 2.2441  data_time: 0.0125  memory: 11026  loss: 0.0445  decode.loss_ce: 0.0445  decode.acc_seg: 97.4569
2024/01/30 23:00:38 - mmengine - INFO - Epoch(train)  [90][20/26]  base_lr: 1.9631e-06 lr: 1.4093e-07  eta: 0:10:01  time: 2.2440  data_time: 0.0124  memory: 11026  loss: 0.0433  decode.loss_ce: 0.0433  decode.acc_seg: 99.0793
2024/01/30 23:00:52 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:00:52 - mmengine - INFO - Saving checkpoint at 90 epochs
2024/01/30 23:01:25 - mmengine - INFO - Epoch(train)  [91][10/26]  base_lr: 1.6255e-06 lr: 1.1669e-07  eta: 0:09:25  time: 2.2683  data_time: 0.0340  memory: 11026  loss: 0.0437  decode.loss_ce: 0.0437  decode.acc_seg: 98.8254
2024/01/30 23:01:52 - mmengine - INFO - Epoch(train)  [91][20/26]  base_lr: 1.6255e-06 lr: 1.1669e-07  eta: 0:09:03  time: 2.3449  data_time: 0.0342  memory: 11026  loss: 0.0454  decode.loss_ce: 0.0454  decode.acc_seg: 100.0000
2024/01/30 23:02:05 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:02:28 - mmengine - INFO - Epoch(train)  [92][10/26]  base_lr: 1.3189e-06 lr: 9.4685e-08  eta: 0:08:26  time: 2.3454  data_time: 0.0345  memory: 11026  loss: 0.0419  decode.loss_ce: 0.0419  decode.acc_seg: 97.4850
2024/01/30 23:02:50 - mmengine - INFO - Epoch(train)  [92][20/26]  base_lr: 1.3189e-06 lr: 9.4685e-08  eta: 0:08:04  time: 2.3491  data_time: 0.0346  memory: 11026  loss: 0.0421  decode.loss_ce: 0.0421  decode.acc_seg: 99.1165
2024/01/30 23:03:04 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:03:26 - mmengine - INFO - Epoch(train)  [93][10/26]  base_lr: 1.0437e-06 lr: 7.4929e-08  eta: 0:07:28  time: 2.3310  data_time: 0.0133  memory: 11026  loss: 0.0421  decode.loss_ce: 0.0421  decode.acc_seg: 99.0636
2024/01/30 23:03:49 - mmengine - INFO - Epoch(train)  [93][20/26]  base_lr: 1.0437e-06 lr: 7.4929e-08  eta: 0:07:05  time: 2.2528  data_time: 0.0132  memory: 11026  loss: 0.0429  decode.loss_ce: 0.0429  decode.acc_seg: 99.4871
2024/01/30 23:04:03 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:04:25 - mmengine - INFO - Epoch(train)  [94][10/26]  base_lr: 8.0020e-07 lr: 5.7446e-08  eta: 0:06:29  time: 2.2582  data_time: 0.0135  memory: 11026  loss: 0.0457  decode.loss_ce: 0.0457  decode.acc_seg: 98.3073
2024/01/30 23:04:47 - mmengine - INFO - Epoch(train)  [94][20/26]  base_lr: 8.0020e-07 lr: 5.7446e-08  eta: 0:06:06  time: 2.2556  data_time: 0.0133  memory: 11026  loss: 0.0448  decode.loss_ce: 0.0448  decode.acc_seg: 99.2383
2024/01/30 23:05:01 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:05:23 - mmengine - INFO - Epoch(train)  [95][10/26]  base_lr: 5.8860e-07 lr: 4.2256e-08  eta: 0:05:30  time: 2.2491  data_time: 0.0135  memory: 11026  loss: 0.0421  decode.loss_ce: 0.0421  decode.acc_seg: 97.8461
2024/01/30 23:05:46 - mmengine - INFO - Epoch(train)  [95][20/26]  base_lr: 5.8860e-07 lr: 4.2256e-08  eta: 0:05:07  time: 2.2515  data_time: 0.0140  memory: 11026  loss: 0.0423  decode.loss_ce: 0.0423  decode.acc_seg: 96.1418
2024/01/30 23:05:59 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:06:22 - mmengine - INFO - Epoch(train)  [96][10/26]  base_lr: 4.0916e-07 lr: 2.9374e-08  eta: 0:04:31  time: 2.2468  data_time: 0.0141  memory: 11026  loss: 0.0369  decode.loss_ce: 0.0369  decode.acc_seg: 99.4744
2024/01/30 23:06:44 - mmengine - INFO - Epoch(train)  [96][20/26]  base_lr: 4.0916e-07 lr: 2.9374e-08  eta: 0:04:08  time: 2.2445  data_time: 0.0139  memory: 11026  loss: 0.0424  decode.loss_ce: 0.0424  decode.acc_seg: 97.2900
2024/01/30 23:06:58 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:07:20 - mmengine - INFO - Epoch(train)  [97][10/26]  base_lr: 2.6208e-07 lr: 1.8815e-08  eta: 0:03:32  time: 2.2430  data_time: 0.0133  memory: 11026  loss: 0.0424  decode.loss_ce: 0.0424  decode.acc_seg: 98.6972
2024/01/30 23:07:42 - mmengine - INFO - Epoch(train)  [97][20/26]  base_lr: 2.6208e-07 lr: 1.8815e-08  eta: 0:03:09  time: 2.2379  data_time: 0.0127  memory: 11026  loss: 0.0424  decode.loss_ce: 0.0424  decode.acc_seg: 98.1373
2024/01/30 23:07:56 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:08:18 - mmengine - INFO - Epoch(train)  [98][10/26]  base_lr: 1.4751e-07 lr: 1.0590e-08  eta: 0:02:33  time: 2.2365  data_time: 0.0126  memory: 11026  loss: 0.0484  decode.loss_ce: 0.0484  decode.acc_seg: 98.8863
2024/01/30 23:08:40 - mmengine - INFO - Epoch(train)  [98][20/26]  base_lr: 1.4751e-07 lr: 1.0590e-08  eta: 0:02:11  time: 2.2369  data_time: 0.0125  memory: 11026  loss: 0.0444  decode.loss_ce: 0.0444  decode.acc_seg: 97.5198
2024/01/30 23:08:54 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:09:16 - mmengine - INFO - Epoch(train)  [99][10/26]  base_lr: 6.5591e-08 lr: 4.7088e-09  eta: 0:01:34  time: 2.2372  data_time: 0.0123  memory: 11026  loss: 0.0488  decode.loss_ce: 0.0488  decode.acc_seg: 98.4309
2024/01/30 23:09:39 - mmengine - INFO - Epoch(train)  [99][20/26]  base_lr: 6.5591e-08 lr: 4.7088e-09  eta: 0:01:12  time: 2.2390  data_time: 0.0121  memory: 11026  loss: 0.0453  decode.loss_ce: 0.0453  decode.acc_seg: 99.8403
2024/01/30 23:09:52 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:10:15 - mmengine - INFO - Epoch(train) [100][10/26]  base_lr: 1.6402e-08 lr: 1.1775e-09  eta: 0:00:36  time: 2.2425  data_time: 0.0122  memory: 11026  loss: 0.0431  decode.loss_ce: 0.0431  decode.acc_seg: 99.8686
2024/01/30 23:10:37 - mmengine - INFO - Epoch(train) [100][20/26]  base_lr: 1.6402e-08 lr: 1.1775e-09  eta: 0:00:13  time: 2.2452  data_time: 0.0121  memory: 11026  loss: 0.0389  decode.loss_ce: 0.0389  decode.acc_seg: 97.9546
2024/01/30 23:10:51 - mmengine - INFO - Exp name: rvsa-l-unet-96-mae_oscd_rgb_20240130_212825
2024/01/30 23:10:51 - mmengine - INFO - Saving checkpoint at 100 epochs
2024/01/30 23:11:00 - mmengine - INFO - Epoch(val) [100][10/49]    eta: 0:00:11  time: 0.2568  data_time: 0.0556  memory: 11026  
2024/01/30 23:11:02 - mmengine - INFO - Epoch(val) [100][20/49]    eta: 0:00:07  time: 0.2563  data_time: 0.0553  memory: 6392  
2024/01/30 23:11:05 - mmengine - INFO - Epoch(val) [100][30/49]    eta: 0:00:05  time: 0.2564  data_time: 0.0552  memory: 6392  
2024/01/30 23:11:07 - mmengine - INFO - Epoch(val) [100][40/49]    eta: 0:00:02  time: 0.2569  data_time: 0.0552  memory: 6392  
2024/01/30 23:11:10 - mmengine - INFO - per class results:
2024/01/30 23:11:10 - mmengine - INFO - 
+-----------+--------+-----------+--------+-------+-------+
|   Class   | Fscore | Precision | Recall |  IoU  |  Acc  |
+-----------+--------+-----------+--------+-------+-------+
| unchanged | 97.52  |   97.39   | 97.66  | 95.17 | 97.66 |
|  changed  | 54.04  |   55.42   | 52.72  | 37.02 | 52.72 |
+-----------+--------+-----------+--------+-------+-------+
2024/01/30 23:11:10 - mmengine - INFO - Epoch(val) [100][49/49]    aAcc: 95.3000  mFscore: 75.7800  mPrecision: 76.4100  mRecall: 75.1900  mIoU: 66.0900  mAcc: 75.1900  data_time: 0.0553  time: 0.2570
2024/01/30 23:11:10 - mmengine - INFO - The previous best checkpoint /work/share/achk2o1zg1/diwang22/work_dir/multitask_pretrain/finetune/Change_Detection/oscd_rgb/rvsa-l-unet-96-mae_oscd_rgb/best_mIoU_epoch_80.pth is removed
2024/01/30 23:11:15 - mmengine - INFO - The best checkpoint with 66.0900 mIoU at 100 epoch is saved to best_mIoU_epoch_100.pth.
